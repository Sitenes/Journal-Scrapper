// <auto-generated />
using System;
using JournalScrapper;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JournalScrapper.Migrations.Scopus
{
    [DbContext(typeof(ScopusContext))]
    partial class ScopusContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JournalScrapper.Entity.ScopusEntity+ScopusArticle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Abstract")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbstractViews")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorKeywords")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Authors")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorsAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorsEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlogMentions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CODEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CitationInScopus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CitationIndexes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CitationsInScopus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClinicalCitations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrespondingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrespondingAuthor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrespondingEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DOI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Downloads")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldWeightedCitationImpact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullTextViews")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISSN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewsMentions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginalLanguage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatentFamilyCitations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolicyCitations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProminencePercentile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PubMedId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Readers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("References")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResearcherIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SharesLikesComments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source14")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source15")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source16")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source17")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source19")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source2001")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source2004")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source2005")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source2006")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source2008")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source2009")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source2010")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source2011")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source2012")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source2013")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source2014")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source2015")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source2016")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source2017")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source2018")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source2019")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source2020")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source2021")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source2022")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source2023")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source2024")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source2025")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source23")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source26")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source29")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source5")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source6")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source8")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceApril")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceDecember")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceFebruary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceIssue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceJanuary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceJune")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceMay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceOctober")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourcePages")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceVolume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sponsors")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TopicName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViewsCount2016_2025")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VolumeEditors")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ScopusArticles");
                });

            modelBuilder.Entity("JournalScrapper.Entity.ScopusEntity+ScopusCitations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Citations")
                        .HasColumnType("int");

                    b.Property<string>("CitationsYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResearcherId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ScopusCitations");
                });

            modelBuilder.Entity("JournalScrapper.Entity.ScopusEntity+ScopusHIndex", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HIndex")
                        .HasColumnType("int");

                    b.Property<string>("ResearcherId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ScopusHIndices");
                });

            modelBuilder.Entity("JournalScrapper.Entity.ScopusEntity+ScopusJournal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CiteScore")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CiteScores")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EISSN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISSN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JournalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PercentilesInCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SJR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SNIP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("YearsCurrentlyCoveredByScopus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ScopusJournals");
                });

            modelBuilder.Entity("JournalScrapper.Entity.ScopusEntity+ScopusProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Affiliation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Articles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorPositionSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CitationBy")
                        .HasColumnType("int");

                    b.Property<string>("CitationsBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CitationsSeries")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CoAuthor")
                        .HasColumnType("int");

                    b.Property<int>("Document")
                        .HasColumnType("int");

                    b.Property<int>("Documents")
                        .HasColumnType("int");

                    b.Property<string>("DocumentsSeries")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FirstAuthor")
                        .HasColumnType("int");

                    b.Property<int>("HIndex")
                        .HasColumnType("int");

                    b.Property<int>("LastAuthor")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Orcid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResearcherId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScopusResearcherId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SingleAuthor")
                        .HasColumnType("int");

                    b.Property<string>("Timestamp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ScopusProfiles");
                });
#pragma warning restore 612, 618
        }
    }
}
